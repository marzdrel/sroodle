---
name: sroodle

x-app: &app
  build:
    context: .
    dockerfile: ./.dockerdev/Dockerfile
    target: sroodle-dev-base
  image: sroodle-dev
  volumes:
    - .:/app
    - .dockerdev/bashrc:/root/.bashrc:ro
    - bundle_cache:/usr/local/bundle
    - node_modules_cache:/app/node_modules
    - ~/.claude.json:/root/.claude.json
    - ~/.claude:/root/.claude
  environment:
    - DISABLE_SPRING=YES
    - RAILS_ENV=development
    - TAILWINDCSS_INSTALL_DIR=node_modules/.bin
    - DATABASE_URL=sqlite3:storage/development.sqlite3
    - QUEUE_DATABASE_URL=sqlite3:storage/development_queue.sqlite3
    - CACHE_DATABASE_URL=sqlite3:storage/development_cache.sqlite3
    - CABLE_DATABASE_URL=sqlite3:storage/development_cable.sqlite3
  tmpfs:
    - /tmp:mode=1777

x-backend: &backend
  <<: *app
  depends_on:
    bundler:
      condition: service_completed_successfully

services:
  bundler:
    <<: *app
    command: >
      bash -c "
        echo 'Running bundler...';
        bundle --version;
        bash -c '[[ -v COMPOSE_DISABLE_BUNDLER ]] || bundle install';
      "
    volumes:
      - .:/app
      - bundle_cache:/usr/local/bundle


  # Rails web server with database setup
  web:
    <<: *backend
    command: >
      sh -c "
        echo 'Database already exists, running migrations...'
        bin/rails db:migrate
        bin/rails server -b 0.0.0.0 -p 3000
      "
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true

  # Tailwind CSS watcher
  css:
    <<: *backend
    stdin_open: true
    tty: true
    command: bin/rails tailwindcss:watch

  # Vite development server
  vite:
    <<: *backend
    command: bin/vite dev
    ports:
      - "3036:3036"

  ai:
    <<: *app
    environment:
      - RAILS_ENV=test
      - DISABLE_SPRING=YES
      - RAILS_ENV=development
      - TAILWINDCSS_INSTALL_DIR=node_modules/.bin
    command: /bin/bash
    stdin_open: true
    tty: true

volumes:
  bundle_cache:
  node_modules_cache:
