# SQLite doesn't handle concurrent writes well, use 1 replica for now
# For true zero-downtime with multiple replicas, consider PostgreSQL
replicaCount: 1

image:
  repository: sroodle
  pullPolicy: Always
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: sroodle.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

livenessProbe:
  httpGet:
    path: /up
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /up
    port: http
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

startupProbe:
  httpGet:
    path: /up
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

volumes: []

volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}

# Rolling update strategy optimized for SQLite single-writer limitation
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 1

# Pod disruption budget disabled for single replica SQLite setup
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# Graceful shutdown configuration
terminationGracePeriodSeconds: 30

# Rails specific environment variables
env:
  RAILS_ENV: production
  RAILS_LOG_TO_STDOUT: "true"
  SOLID_QUEUE_IN_PUMA: "true"

# Rails master key (to be provided via Helm values)
railsMasterKey: ""

# Secret environment variables (managed by Helm secret template)
secretEnv:
  - name: RAILS_MASTER_KEY
    valueFrom:
      secretKeyRef:
        name: sroodle-secrets
        key: rails-master-key

# Database migrations job configuration
migrations:
  enabled: true
  backoffLimit: 2
  activeDeadlineSeconds: 600
  ttlSecondsAfterFinished: 3600
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi

# Persistent volume for SQLite databases and storage
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 10Gi
  mountPath: /rails/storage
